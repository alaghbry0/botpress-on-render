version: '3.8'

services:
  botpress:
    image: botpress/server:latest
    command: /botpress/bp
    networks:
      - botpress-net
    environment:
      DATABASE_URL: postgres://exaado:exaado_pw@postgres:5432/botpress_db
      REDIS_URL: redis://:exaado_redis_pw@redis:6379
      BP_MODULE_NLU_DUCKLINGURL: http://botpress-lang:8000
      BP_MODULE_NLU_LANGUAGESOURCES: '[{"endpoint":"http://botpress-lang:3100"}]'
      CLUSTER_ENABLED: "true"
      BP_PRODUCTION: "true"
      BPFS_STORAGE: "database"
      BP_EXTERNAL_URL: "https://botpress-2r85.onrender.com"
    depends_on:
      botpress-lang:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - botpress-data:/botpress/data

  botpress-lang:
    image: botpress/language-server:latest
    command: sh -c "./duckling -p 8000 & ./bp lang --langDir /botpress/lang --port 3100"
    networks:
      - botpress-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - lang-data:/botpress/lang

  postgres:
    image: postgres:11.2-alpine
    networks:
      - botpress-net
    environment:
      POSTGRES_DB: botpress_db
      POSTGRES_USER: exaado
      POSTGRES_PASSWORD: exaado_pw
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U exaado -d botpress_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:5.0.5-alpine
    networks:
      - botpress-net
    command: redis-server --requirepass exaado_redis_pw
    healthcheck:
      test: ["CMD", "redis-cli", "--auth", "exaado_redis_pw", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  redis-data:
  botpress-data:
  lang-data:

networks:
  botpress-net:
    driver: bridge